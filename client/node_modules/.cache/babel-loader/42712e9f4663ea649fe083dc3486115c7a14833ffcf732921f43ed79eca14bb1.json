{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Roxiler_Mern_Task1\\\\client\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { fetchBarChartData } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  month\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const loadChartData = async () => {\n      const response = await fetchBarChartData(month);\n      const data = response.data;\n      setChartData({\n        labels: data.priceRanges.map(range => range.label),\n        datasets: [{\n          label: 'Number of Items',\n          data: data.priceRanges.map(range => range.count),\n          backgroundColor: 'rgba(75, 192, 192, 0.6)'\n        }]\n      });\n    };\n    loadChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Price Range for \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","fetchBarChartData","jsxDEV","_jsxDEV","BarChart","month","_s","chartData","setChartData","loadChartData","response","data","labels","priceRanges","map","range","label","datasets","count","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Roxiler_Mern_Task1/client/src/components/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { fetchBarChartData } from '../services/api';\r\n\r\nconst BarChart = ({ month }) => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const loadChartData = async () => {\r\n      const response = await fetchBarChartData(month);\r\n      const data = response.data;\r\n\r\n      setChartData({\r\n        labels: data.priceRanges.map(range => range.label),\r\n        datasets: [{\r\n          label: 'Number of Items',\r\n          data: data.priceRanges.map(range => range.count),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        }]\r\n      });\r\n    };\r\n    loadChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Price Range for {month}</h3>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMT,iBAAiB,CAACI,KAAK,CAAC;MAC/C,MAAMM,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAE1BH,YAAY,CAAC;QACXI,MAAM,EAAED,IAAI,CAACE,WAAW,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;QAClDC,QAAQ,EAAE,CAAC;UACTD,KAAK,EAAE,iBAAiB;UACxBL,IAAI,EAAEA,IAAI,CAACE,WAAW,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACG,KAAK,CAAC;UAChDC,eAAe,EAAE;QACnB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IACDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAI,kBAAgB,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCrB,OAAA,CAACH,GAAG;MAACW,IAAI,EAAEJ;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BIF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}